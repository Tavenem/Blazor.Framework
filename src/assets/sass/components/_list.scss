.drop-placeholder {
    background-color: var(--tavenem-color-info-hover);
    border: 1px solid var(--tavenem-color-info);
    border-radius: var(--tavenem-border-radius);
    box-shadow: inset 0 0 10px 5px var(--tavenem-color-info-hover-bright);
    height: calc(var(--tavenem-lineheight-body) * 1em);
    margin-bottom: 1em;
    width: 100%;
}

.list {
    --list-active-bg: var(--tavenem-color-primary-hover);
    --list-active-color: var(--tavenem-color-primary);
    --list-active-hover-bg: var(--tavenem-color-primary-hover-bright);
    --list-color: var(--tavenem-color-action);
    --list-hover-bg: var(--tavenem-color-action-hover-bg);
    color: var(--list-color);
    display: flex;
    flex-direction: column;
    list-style: none;
    margin: 0;
    overflow: auto;
    padding: .5em 1em;
    position: relative;
    scrollbar-gutter: stable;
    transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

    > {
        * {
            align-items: center;
            background-color: transparent;
            box-sizing: border-box;
            color: inherit;
            column-gap: .5em;
            display: flex;
            flex: 0 0 auto;
            flex-wrap: wrap;
            justify-content: flex-start;
            list-style: none;
            padding: .5em 1em;
            padding-bottom: .5em;
            padding-top: .5em;
            position: relative;
            text-align: start;
            text-decoration: none;
            transition: background-color 150ms cubic-bezier(.4,0,.2,1) 0ms;
            -webkit-tap-highlight-color: transparent;

            &:focus-visible, &:hover {
                background-color: transparent;
                color: inherit;
            }

            > tf-icon, > .avatar, .list-icon-spacer {
                flex-shrink: 0;
                margin-bottom: -.25em;
                margin-top: -.25em;
            }

            &:disabled, &.disabled {
                color: var(--tavenem-color-action-disabled) !important;
                cursor: default !important;
                pointer-events: none !important;

                tf-icon {
                    color: var(--tavenem-color-action-disabled) !important;
                }
            }
        }

        .subheader {
            font-size: .875em;
            font-weight: var(--tavenem-font-weight-bold);

            &.inset {
                padding-inline-start: 4.5em;
            }

            &.sticky {
                background-color: inherit;
                position: sticky;
                top: 0;
                z-index: 1;
            }
        }

        hr {
            background-color: var(--tavenem-color-divider);
            margin: 0;
            padding: 0;
            padding-bottom: 0;
            padding-inline-end: 0;
            padding-inline-start: 0;
            padding-right: 0;
            padding-top: 0;
        }

        .active {
            background-color: var(--list-active-bg);
            border-inline-end: 1px solid var(--list-active-color);
            color: var(--list-active-color);
            padding-inline-end: calc(1em - 1px);
        }

        .clickable, a {
            @include ripple;
        }

        .selectable {
            background-color: transparent;
            border: 0;
        }

        .clickable, a, button {
            border: 0;
            border-radius: 0;
            cursor: pointer;
            margin: 0;
            outline: 0;
            transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
            user-select: none;
            vertical-align: middle;
            -webkit-appearance: none;
            -webkit-tap-highlight-color: transparent;

            &:hover,
            &:focus:not(.active) {
                &:not(:disabled, .disabled) {
                    background-color: var(--list-hover-bg);

                    &.active {
                        background-color: var(--list-active-hover-bg);
                    }
                }
            }
        }

        .drop-placeholder {
            align-self: stretch;
            background-color: var(--tavenem-color-info-hover);
            margin-inline-end: 1em;
            margin-inline-start: 1em;
            width: auto;
        }
    }

    &.clickable > *:not(hr) {
        @include ripple;
        border: 0;
        border-radius: 0;
        cursor: pointer;
        margin: 0;
        outline: 0;
        transition: background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
        user-select: none;
        vertical-align: middle;
        -webkit-appearance: none;
        -webkit-tap-highlight-color: transparent;

        &:hover,
        &:focus:not(.active) {
            &:not(:disabled, .disabled) {
                background-color: var(--list-hover-bg);

                &.active {
                    background-color: var(--list-active-hover-bg);
                }
            }
        }
    }

    .tree &,
    .tree &.clickable,
    &.tree,
    &.tree.clickable {
        > *:not(hr) {
            margin-inline-start: 1.5rem;
        }

        .drop-placeholder {
            margin-inline-start: 1.5rem;
        }
    }

    .tree & > *:not(hr) {
        margin-inline-start: 2.5rem;
    }

    &.disabled > {
        *:not(hr) {
            color: var(--tavenem-color-action-disabled) !important;
            cursor: default !important;
            pointer-events: none !important;

            tf-icon {
                color: var(--tavenem-color-action-disabled) !important;
            }
        }

        .clickable, a, button {
            &:hover,
            &:focus:not(.active) {
                background-color: transparent;
            }
        }
    }

    .list {
        padding-inline-start: 2em;
        padding-inline-end: 0;
        scrollbar-gutter: auto;
    }

    &.highlight-start {
        > .active {
            border-inline-start: 1px solid var(--list-active-color);
            border-inline-end: none;
            padding-inline-start: calc(1em - 1px);
            padding-inline-end: 1em;
        }

        .list > .active {
            padding-inline-start: calc(2em - 1px);
        }
    }

    &.dense {
        padding-bottom: .25em;
        padding-top: .25em;

        > *:not(hr) {
            padding-bottom: .25em;
            padding-top: .25em;
        }
    }

    &.filled {
        --list-active-bg: var(--tavenem-theme-color-hover-bright, var(--tavenem-color-primary-hover-bright));
        --list-active-color: var(--tavenem-theme-color, var(--tavenem-color-primary));
        --list-active-hover-bg: var(--tavenem-theme-color-hover-bright-2, var(--tavenem-color-primary-hover-bright-2));
        --list-hover-bg: var(--tavenem-theme-color-hover-bright, var(--tavenem-color-action-hover-bg));
        --tavenem-theme-color-bg-alt: var(--tavenem-theme-color-hover-dark);
        background-color: var(--tavenem-theme-color-hover, var(--tavenem-color-bg-surface));
        color: var(--list-color);

        &.solid {
            --list-active-bg: var(--tavenem-theme-color-hover-light-bright, var(--tavenem-color-primary-hover-light-bright));
            --list-active-color: var(--tavenem-theme-color-text, var(--tavenem-color-primary-text));
            --list-active-hover-bg: var(--tavenem-theme-color-lighten-2, var(--tavenem-color-primary-lighten-2));
            --list-color: var(--tavenem-theme-color-text, var(--tavenem-color-default-text));
            --list-hover-bg: var(--tavenem-theme-color-hover-light-bright, var(--tavenem-color-default-hover-light-bright));
            --tavenem-theme-color-bg-alt: var(--tavenem-theme-color-darken);
            background-color: var(--tavenem-theme-color, var(--tavenem-color-default));
            color: var(--list-color);
        }
    }

    &.can-drop:not(.self-drop) {
        padding-bottom: 2.5em;

        &.dense {
            padding-bottom: 2em;
        }
    }

    &.can-drag > *:not(.no-drag):hover:before {
        content: '⋮⋮';
        left: 0;
        position: absolute;
        top: 0;
        transform: translateY(50%);
    }

    &.can-drag > .collapse:not(.no-drag):hover:before {
        left: 1.5rem;
    }

    @each $theme in $theme-colors {
        &:where(.#{$theme}) {
            --list-active-bg: var(--tavenem-theme-color-hover);
            --list-active-color: var(--tavenem-theme-color);
            --list-active-hover-bg: var(--tavenem-theme-color-hover-bright);
            --list-hover-bg: var(--tavenem-theme-color-hover);
            color: var(--list-color);
        }

        > .#{$theme} {
            --list-hover-bg: var(--tavenem-theme-color-hover-bright);
            background-color: var(--tavenem-theme-color-hover);
            color: var(--tavenem-theme-color);
        }
    }
}

.list-icon-spacer {
    display: inline-block;
    font-size: 1.5em;
    width: 1em;
}

.contents {
    color: var(--tavenem-color-text-secondary);

    > .active {
        border-left: 1px solid var(--list-active-color);
        border-right: none;
    }

    > .scroll-active {
        background-color: var(--list-active-bg);
        border-left: 1px solid var(--list-active-color);
        color: var(--list-active-color);
        padding-right: calc(1em - 1px);
    }
}
