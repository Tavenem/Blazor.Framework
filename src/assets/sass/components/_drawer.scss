@keyframes tf-icon-to-full {
    from {
        max-width: 3.5rem;
        width: 3.5rem;
    }
}

@keyframes tf-full-to-icon {
    from {
        max-width: 15rem;
        width: auto;
    }
}

.drawer {
    background-color: var(--tavenem-color-bg);
    border-radius: 0;
    box-shadow: none;
    color: var(--tavenem-color-text);
    margin: 0 !important;
    outline: 0;
    overflow: hidden;
    transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    z-index: var(--tavenem-zindex-drawer);

    @media print {
        display: none;
    }

    &.filled {
        background-color: var(--tavenem-color-bg-surface);
    }

    > {
        .header,
        .footer {
            min-height: 4rem;

            &.drawer-control {
                height: auto;
                margin-bottom: 0;
                min-height: 0;

                .toolbar {
                    min-height: 0;
                }
            }
        }
    }

    &.dense, .dense & {
        > {
            .header,
            .footer {
                min-height: 3rem;
            }
        }
    }

    @media (min-width: 768px) and (orientation: landscape) {
        > {
            .header,
            .footer {
                min-height: 3rem;
            }
        }
    }

    &.open {
        overflow-y: auto;
    }

    &.left,
    &.right {
        flex-direction: column;
        height: 100%;
        max-width: 0;
        transition: width 0ms 400ms;

        @media (prefers-reduced-motion) {
            transition: none;
        }

        .drawer-control,
        .drawer-close-small {
            @media (min-width: 768px) {
                display: none;
            }
        }

        &.icon-drawer {
            animation: forwards tf-full-to-icon 225ms cubic-bezier(0, 0, 0.2, 1);
            transition: width 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }

            &:hover {
                animation: forwards tf-icon-to-full 225ms cubic-bezier(0, 0, 0.2, 1);
                max-width: 15rem;
                width: auto;

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }

            &.open {
                animation: forwards tf-icon-to-full 225ms cubic-bezier(0, 0, 0.2, 1);

                &:hover {
                    animation: none;
                }

                @media (prefers-reduced-motion) {
                    animation: none;
                }
            }

            @media (prefers-reduced-motion) {
                transition: none;
            }

            @media (max-width: 767px) {
                animation: none;
                max-width: 0;
                width: 0;

                &.open {
                    max-width: unset;
                    width: 100%;

                    &.left {
                        animation: forwards tf-slide-in-left 225ms cubic-bezier(0, 0, 0.2, 1);

                        @media (prefers-reduced-motion) {
                            animation: none;
                        }
                    }

                    &.right {
                        animation: forwards tf-slide-in-right 225ms cubic-bezier(0, 0, 0.2, 1);

                        @media (prefers-reduced-motion) {
                            animation: none;
                        }
                    }
                }

                &:hover {
                    animation: none;
                    max-width: 0;
                    width: 0;
                }

                &.closed {
                    &.left {
                        animation: forwards tf-slide-out-left 225ms cubic-bezier(0, 0, 0.2, 1);
                        transform: translateX(-100%);

                        @media (prefers-reduced-motion) {
                            animation: none;
                        }
                    }

                    &.right {
                        animation: forwards tf-slide-out-right 225ms cubic-bezier(0, 0, 0.2, 1);
                        transform: translateX(100%);

                        @media (prefers-reduced-motion) {
                            animation: none;
                        }
                    }
                }
            }
        }

        &.open {
            max-width: 15rem;
            transform: translateX(0);
        }

        @media (max-width: 767px) {
            &, &.open {
                max-width: unset;
                width: 100%;
            }
        }
    }

    &.left {
        grid-area: leftdrawer;
        transform: translateX(-100%);

        &.closed:not(.icon-drawer) {
            animation: forwards tf-slide-out-left 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open:not(.icon-drawer) {
            animation: forwards tf-slide-in-left 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        .controls-left + & {
            .drawer-control,
            .drawer-close-small {
                display: none;
            }
        }

        @media (max-width: 767px) {
            grid-area: main;
        }
    }

    &.right {
        grid-area: rightdrawer;
        transform: translateX(100%);

        &.closed:not(.icon-drawer) {
            animation: forwards tf-slide-out-right 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open:not(.icon-drawer) {
            animation: forwards tf-slide-in-right 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        .controls-right + & {
            .drawer-control,
            .drawer-close-small {
                display: none;
            }
        }

        @media (max-width: 767px) {
            grid-area: main;
        }
    }

    &.bottom,
    &.top {
        flex-direction: row;
        flex-wrap: wrap;
        max-height: 0;
        padding-bottom: 0;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
        padding-top: 0;
        transition: height 0ms 400ms;
        width: 100%;

        @media (prefers-reduced-motion) {
            transition: none;
        }

        &.open {
            max-height: 20rem;
            padding-bottom: 1rem;
            padding-top: 1rem;
            transform: translateY(0);
        }
    }

    &.bottom {
        grid-area: bottomdrawer;
        transform: translateY(100%);

        &.closed {
            animation: forwards tf-slide-out-bottom 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            animation: forwards tf-slide-in-bottom 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        .controls-bottom + & {
            .drawer-control,
            .drawer-close-small {
                display: none;
            }
        }
    }

    &.top {
        grid-area: topdrawer;
        transform: translateY(-100%);

        &.closed {
            animation: forwards tf-slide-out-top 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        &.open {
            animation: forwards tf-slide-in-top 225ms cubic-bezier(0, 0, 0.2, 1);

            @media (prefers-reduced-motion) {
                animation: none;
            }
        }

        .controls-top + & {
            .drawer-control,
            .drawer-close-small {
                display: none;
            }
        }
    }

    .appbar.top ~ & {
        padding-top: 0;
    }
}

.drawer-close-small {
    margin-inline-end: -1.5rem;
}

.drawer-container {
    > .overlay.drawer-overlay {
        display: none;
    }

    &.drawer-open {
        .overlay.drawer-overlay {
            display: flex;

            @media print {
                display: none;
            }
        }
    }
}

.drawer-breakpoint-none.icon-drawer:not(.open, :hover) {
    &.left,
    &.right {
        max-width: 3.5rem;
        width: 3.5rem;

        * {
            font-size: 0;
            overflow-x: hidden;
        }

        tf-icon {
            display: inline-block !important;
            font-size: 1.5rem;
            margin: auto !important;
        }

        .avatar {
            display: inline-flex !important;
            font-size: 1.25rem;
        }

        @media (max-width: 767px) {
            max-width: 0;
            width: 0;

            &.open {
                max-width: unset;
                width: 100%;
            }
        }
    }
}

@each $breakpoint, $min-width in $breakpoints {
    @media (min-width: $min-width) {
        .drawer-#{$breakpoint} {
            overflow-y: auto;

            .drawer-control,
            tf-close {
                display: none;
            }

            &.left,
            &.right {
                max-width: 15rem;
                transform: translateX(0);

                &.closed:not(.icon-drawer),
                &.open:not(.icon-drawer) {
                    animation: none;
                }

                &.icon-drawer {
                    max-width: 15rem;
                    transition: none;

                    &:hover {
                        animation: none;
                    }

                    &.closed {
                        animation: none;
                    }
                }
            }

            &.bottom,
            &.top {
                max-height: 20rem;
                transform: translateY(0);

                &.closed {
                    animation: none;
                }
            }
        }

        .drawer-toggle-#{$breakpoint} {
            display: none;
        }

        .drawer-container-#{$breakpoint} {
            &, &.drawer-open {
                > .overlay.drawer-overlay {
                    display: none;
                }
            }
        }
    }
}

@each $breakpoint, $max-width in $breakpoint-maxs {
    @media (max-width: $max-width) {
        .drawer-#{$breakpoint}.icon-drawer:not(.open, :hover) {
            &.left,
            &.right {
                max-width: 3.5rem;
                width: 3.5rem;

                * {
                    font-size: 0;
                    overflow-x: hidden;
                }

                tf-icon {
                    font-size: 1.5rem;
                    margin: auto !important;
                }

                .avatar {
                    font-size: 1.25rem;
                }

                @media (max-width: 767px) {
                    max-width: 0;
                    width: 0;

                    &.open {
                        max-width: unset;
                        width: 100%;
                    }
                }
            }
        }
    }
}
