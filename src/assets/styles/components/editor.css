.editor-field {
    --field-active-border-color: var(--tavenem-color-primary);
    --field-active-border-hover-color: var(--tavenem-color-primary-lighten);
    --field-active-label-color: var(--tavenem-color-primary);
    --field-border-color: var(--tavenem-color-border-input);
    --field-border-hover-color: var(--tavenem-color-action);
    --field-color: var(--tavenem-color-text);
    --field-label-color: var(--tavenem-color-text-secondary);
    border: 0;
    color: var(--tavenem-color-text);
    display: flex;
    flex: 1 1 auto;
    flex-direction: column;
    margin: 0;
    margin-bottom: .5rem;
    margin-top: 1rem;
    max-width: 100%;
    padding: 0;
    position: relative;

    > label {
        color: var(--field-label-color);
        display: block;
        font-size: .75rem;
        font-weight: var(--tavenem-font-weight);
        line-height: 1;
        padding: 0;
        pointer-events: auto;
        position: initial;
        transform: none;
        transition: color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
        z-index: auto;
    }

    &.required > label:after {
        color: var(--tavenem-color-error);
        content: " *";
    }

    > .editor-toolbar {
        background-color: var(--tavenem-color-bg-surface);
        border-color: var(--field-border-color);
        border-style: solid;
        border-top-left-radius: var(--tavenem-border-radius);
        border-top-right-radius: var(--tavenem-border-radius);
        border-width: 1px;
        margin-top: .5rem;
        overflow: hidden;
        position: relative;

        > .editor-toolbar-show-all-btn {
            position: absolute;
            right: 1rem;
            top: .5rem;
        }

        > div:first-child {
            border-top-left-radius: var(--tavenem-border-radius);
            border-top-right-radius: var(--tavenem-border-radius);
            column-gap: .5rem;
            display: flex;
            flex-wrap: wrap;
            height: calc(2.25rem + 12px);
            padding: .5rem calc(2.75rem + 10px) .5rem 1rem;
            row-gap: .75rem;

            > .btn:not(:disabled),
            > .button-group,
            > .button-group-text {
                border: 1px solid transparent;
            }
        }

        &.editor-toolbar-extended > div:first-child {
            height: auto;
        }

        .field {
            flex-grow: 0;

            > .input {
                margin-top: 0;
                padding-bottom: 5px;
            }
        }

        .select {
            margin-bottom: 0;
            margin-top: 0;

            .input-core {
                width: 8em;
            }
        }
    }

    > .editor-statusbar {
        background-color: var(--tavenem-color-bg-surface);
        border-bottom-left-radius: var(--tavenem-border-radius);
        border-bottom-right-radius: var(--tavenem-border-radius);
        border-color: var(--field-border-color);
        border-style: solid;
        border-width: 1px;
        position: relative;
        padding: .25rem 1rem;
    }

    > .editor {
        background-color: var(--tavenem-color-bg-input);
        border-bottom-width: 0;
        border-color: var(--field-border-color);
        border-left-width: 1px;
        border-right-width: 1px;
        border-style: solid;
        border-top-width: 0;
        color: var(--tavenem-color-text);
        display: flex;
        min-height: calc((1.4em * 2) + 8px);
        position: relative;
        transition: border-width,border-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;

        ul {
            list-style: disc;
        }

        &.no-statusbar {
            border-bottom-left-radius: var(--tavenem-border-radius);
            border-bottom-right-radius: var(--tavenem-border-radius);
            border-bottom-width: 1px;
        }

        &.no-toolbar {
            border-top-left-radius: var(--tavenem-border-radius);
            border-top-right-radius: var(--tavenem-border-radius);
            border-top-width: 1px;
        }

        .cm-panel input[type=checkbox]:not(:checked):before {
            background-color: var(--tavenem-color-bg-input);
            content: "";
            height: calc(100% - 2px);
            left: 1px;
            position: absolute;
            top: 1px;
            width: calc(100% - 2px);
        }

        .ProseMirror,
        .static-editor-html,
        .static-syntax-highlighting {
            flex-grow: 1;
            padding: .25rem .5rem .25rem 1rem;
        }

        .ProseMirror,
        .static-editor-html {
            line-height: 1.2;
            outline: none;
            position: relative;
            white-space: break-spaces;
            word-wrap: break-word;

            &.resize-cursor {
                cursor: col-resize;
            }

            .editor-placeholder {
                color: var(--tavenem-color-text-secondary);
                height: 0;
                pointer-events: none;
            }

            &:focus .editor-placeholder {
                display: none;
            }

            .task-list-item {
                align-items: baseline;
                display: flex;

                > input:first-child {
                    flex: 0 0 auto;
                    margin-right: .5rem;
                }

                > *:not(:first-child) {
                    flex: 1 1 auto;
                }
            }

            .tableWrapper {
                margin: 1em 0;
                overflow-x: auto;

                table {
                    overflow: hidden;
                    table-layout: fixed;
                }

                table, th, td {
                    border-style: solid;
                    border-width: 1px;
                    padding: 3px 5px;
                }

                th, td {
                    min-width: 25px;
                    position: relative;
                    vertical-align: top;
                }

                th {
                    font-weight: bolder;
                }
            }

            .column-resize-handle {
                background-color: #adf;
                bottom: 0;
                pointer-events: none;
                position: absolute;
                right: -2px;
                top: 0;
                width: 4px;
                z-index: 20;
            }

            .selectedCell:after {
                background: rgba(200, 200, 255, 0.4);
                bottom: 0;
                content: "";
                left: 0;
                right: 0;
                top: 0;
                pointer-events: none;
                position: absolute;
                z-index: 2;
            }

            .cm-editor[data-language]:after {
                background-color: rgba(0,128,255,.2);
                border-bottom-left-radius: var(--tavenem-border-radius);
                border-bottom-right-radius: var(--tavenem-border-radius);
                color: var(--tavenem-color-text);
                content: attr(data-language);
                font-size: .75em;
                line-height: 1;
                padding: 2px 4px;
                position: absolute;
                right: .5rem;
                top: 1px;
            }
        }

        .static-syntax-highlighting > pre {
            background-color: transparent;
            border-radius: inherit;
            color: inherit;
            margin-bottom: 0;
            padding: 0;
        }

        &.set-height {
            .ProseMirror,
            .static-editor-html,
            .static-syntax-highlighting {
                overflow: auto;
            }
        }
    }

    &:not(.read-only, .disabled) > .editor:hover {
        border-color: var(--field-border-hover-color);
    }

    &:focus-within:not(.read-only, .disabled) {
        --field-border-color: var(--field-active-border-color);
        --field-border-hover-color: var(--field-active-border-hover-color);
        --field-label-color: var(--field-active-label-color);
    }

    &.invalid {
        --field-active-border-color: var(--tavenem-color-error);
        --field-active-border-hover-color: var(--tavenem-color-error);
        --field-active-label-color: var(--tavenem-color-error);
        --field-border-color: var(--tavenem-color-error);
        --field-border-hover-color: var(--tavenem-color-error);
        --field-color: var(--tavenem-color-error);
        --field-label-color: var(--tavenem-color-error);
    }

    &.bg-alt {
        background-color: transparent;
    }

    &.primary,
    &.secondary,
    &.tertiary,
    &.danger,
    &.dark,
    &.default,
    &.info,
    &.success,
    &.warning {
        &:not(.invalid) {
            --field-active-border-color: var(--tavenem-theme-color);
            --field-active-border-hover-color: var(--tavenem-theme-color-lighten);
            --field-active-label-color: var(--tavenem-theme-color);
        }

        &.filled {
            background-color: transparent;
        }
    }
}

.editor-field > .editor .ProseMirror::selection {
    background-color: var(--tavenem-color-bg);
}
.editor-field > .editor .ProseMirror:focus-within::selection {
    background-color: var(--tavenem-color-bg-highlight-bright);
}
.editor-field > .editor .ProseMirror[contenteditable="false"]::selection {
    background-color: var(--tavenem-color-bg-highlight-bright);
}
.editor-field > .editor .static-editor-html::selection {
    background-color: var(--tavenem-color-bg);
}
.editor-field > .editor .static-editor-html:focus-within::selection {
    background-color: var(--tavenem-color-bg-highlight-bright);
}
.editor-field > .editor .static-editor-html[contenteditable="false"]::selection {
    background-color: var(--tavenem-color-bg-highlight-bright);
}