@namespace Tavenem.Blazor.Framework

@inherits BoolInputComponentBase<bool>

<div @attributes="AdditionalAttributes" class="@CssClass" style="@CssStyle">
    <label>
        @if (!string.IsNullOrEmpty(UncheckedLabel))
        {
            <span class="label">@UncheckedLabel</span>
        }
        <span class="toggle">
            <span id="@ButtonId" class="@ButtonClass">
                <input @ref="ElementReference"
                       @attributes="InputAttributes"
                       id="@Id"
                       type="checkbox"
                       tabindex="@TabIndex"
                       class="@InputCssClass"
                       style="@InputCssStyle"
                       autofocus="@AutoFocus"
                       checked="@IsChecked"
                       disabled="@Disabled"
                       name="@NameValue"
                       readonly="@ReadOnly"
                       @onchange="@OnChange"
                       @onclick:preventDefault="@ReadOnly" />
                <span class="switch-thumb">
                    <tf-icon class="@CheckedIconClass">@CheckedIcon</tf-icon>
                    <tf-icon class="@UncheckedIconClass">@UncheckedIcon</tf-icon>
                </span>
            </span>
            <span class="switch-track"></span>
        </span>
        @if (!string.IsNullOrEmpty(Label))
        {
            <label class="label" for="@Id">@Label</label>
        }
    </label>
    @if (IsInvalidAndTouched)
    {
        <div class="field-helpers">
            <ul class="mr-auto mb-0 pl-0">
                @foreach (var message in GetValidationMessages())
                {
                    <li>@message</li>
                }
            </ul>
        </div>
    }
    @ChildContent
</div>
