@namespace Tavenem.Blazor.Framework.InternalComponents

@typeparam TListItem

@inherits DraggableDropTarget<TListItem, TListItem>

@if (SeparatorBeforeValue)
{
    <hr />
}
@if (IsCollapsibleValue)
{
    <CascadingValue Value="this">
        <ListItemCollapse @ref="CollapseReference"
                          TListItem="TListItem"
                          Id="@Id"
                          Class="@CollapseClass"
                          Disabled="Disabled"
                          JsonTypeInfo="JsonTypeInfo"
                          Style="@Style"
                          ThemeColor="ThemeColor"
                          Title="@(ChildContent is null ? Item?.ToString() : null)">
            <TitleContent>@ChildContent</TitleContent>
            <ChildContent>
                @if (Item is not null)
                {
                    if (ElementList?.CollapsibleTemplateValue is null)
                    {
                        <span>@(Item?.ToString())</span>
                    }
                    else
                    {
                        @ElementList.CollapsibleTemplateValue(Item)
                    }
                }
            </ChildContent>
        </ListItemCollapse>
    </CascadingValue>
}
else
{
    <div @ref="ElementReference"
         @attributes="AdditionalAttributes"
         id="@Id"
         role="listitem"
         class="@CssClass"
         style="@CssStyle"
         draggable="@(GetIsDraggable() ? "true" : "false")"
         @onclick="OnClickAsync"
         @onclick:stopPropagation="true">
        @if (HasValidDrop)
        {
            <div class="@ElementList?.DropPlaceholderClass"></div>
        }
        @if (ElementList?.SelectionIcons == true)
        {
            if (IsSelected)
            {
                <svg class="svg-icon" xmlns="http://www.w3.org/2000/svg" height="48" viewBox="0 -960 960 960" width="48"><path d="m419-321 289-289-43-43-246 246-119-119-43 43 162 162ZM180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm0-600v600-600Z"/></svg>
            }
            else
            {
                <svg class="svg-icon" xmlns="http://www.w3.org/2000/svg" height="48" viewBox="0 -960 960 960" width="48"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Z"/></svg>
            }
        }
        else if (ElementList?.ShowSelectionIconValue == true
            && IsSelected)
        {
            <svg class="svg-icon" xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 -960 960 960" width="24px"><path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"/></svg>
        }
        else if (!string.IsNullOrWhiteSpace(IconName))
        {
            <tf-icon class="@IconClassName">@IconName</tf-icon>
        }
        else if (ElementList is not null
            && ElementList.SelectionType != SelectionType.None
            && ElementList.ShowSelectionIconValue)
        {
            <div class="list-icon-spacer"></div>
        }
        @if (ChildContent is null)
        {
            <span>@(Item?.ToString())</span>
        }
        else
        {
            @ChildContent
        }
    </div>
}
@if (SeparatorAfterValue)
{
    <hr />
}
