@namespace Tavenem.Blazor.Framework

@attribute [CascadingTypeParameter(nameof(TValue))]
@typeparam TValue

@inherits SelectBase<TValue, TValue>

<tf-select @ref="ElementReference"
           @attributes="AdditionalAttributes"
           id="@Id"
           class="@CssClass"
           autofocus="@AutoFocus"
           data-input-class="@InputCssClass"
           data-input-readonly
           data-input-style="@InputCssStyle"
           data-label="@Label"
           data-popover-limit-height
           disabled="@Disabled"
           name="@NameValue"
           placeholder="@Placeholder"
           readonly="@ReadOnly"
           required="@Required"
           style="@CssStyle"
           tabindex="@TabIndex"
           value="@CurrentValueAsString"
           @searchinput="OnSearchInputAsync"
           @valuechange="OnPickerValueChange">
    @if (IsInvalidAndTouched)
    {
        <ul slot="helpers" class="mr-auto mb-0 pl-0">
            @foreach (var message in GetValidationMessages())
            {
                <li>@message</li>
            }
        </ul>
    }
    else if (!string.IsNullOrEmpty(HelpText))
    {
        <div slot="helpers" class="mr-auto">@HelpText</div>
    }
    <div class="@OptionListCssClass" slot="popover">
        <CascadingValue Value="this" IsFixed="true">
            @ChildContent
            @if (Options is not null)
            {
                if (OptionTemplate is null)
                {
                    foreach (var value in Options)
                    {
                        <Option @key="value" Value="value" Label="@(Labels?.Invoke(value) ?? value?.ToString())" />
                    }
                }
                else
                {
                    foreach (var value in Options)
                    {
                        <Option @key="value" Value="value" Label="@(Labels?.Invoke(value) ?? value?.ToString())">
                            @OptionTemplate(value)
                        </Option>
                    }
                }
            }
            @if (OptionPairs is not null)
            {
                foreach (var (key, value) in OptionPairs)
                {
                    <Option @key="key" Value="key" Label="@value" />
                }
            }
        </CascadingValue>
    </div>
</tf-select>
