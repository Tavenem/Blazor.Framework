@namespace Tavenem.Blazor.Framework

@typeparam TValue

@inherits PickerComponentBase<TValue>

<tf-color-input @ref="ElementReference"
                @attributes="AdditionalAttributes"
                id="@Id"
                alpha="@ShowAlpha"
                autofocus="@AutoFocus"
                button="@(DisplayType == PickerDisplayType.Button)"
                class="@CssClass"
                data-icon="@Icon"
                data-input-class="@InputCssClass"
                data-input-mode="@ColorMode.ToCSS()"
                data-input-style="@InputCssStyle"
                data-label="@Label"
                data-show-swatch="@(!IconButton)"
                disabled="@Disabled"
                inline="@(DisplayType == PickerDisplayType.Inline)"
                name="@NameValue"
                readonly="@ReadOnly"
                required="@Required"
                style="@CssStyle"
                tabindex="@TabIndex"
                value="@CurrentValueAsString"
                @valuechange="OnValueChange">
    @if (DisplayType != PickerDisplayType.Button)
    {
        @if (IsInvalidAndTouched)
        {
            <ul slot="helpers" class="mr-auto mb-0 pl-0">
                @foreach (var message in GetValidationMessages())
                {
                    <li>@message</li>
                }
            </ul>
        }
        else if (!string.IsNullOrEmpty(HelpText))
        {
            <div slot="helpers" class="mr-auto">@HelpText</div>
        }
    }
    @ChildContent
</tf-color-input>
