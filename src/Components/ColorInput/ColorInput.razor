@namespace Tavenem.Blazor.Framework

@typeparam TValue

@inherits PickerComponentBase<TValue>

<tf-color-input @ref="ElementReference"
                @attributes="AdditionalAttributes"
                id="@ContainerId"
                alpha="@ShowAlpha"
                autofocus="@AutoFocus"
                button="@(DisplayType == PickerDisplayType.Button)"
                class="@CssClass"
                data-input-id="@Id"
                data-input-class="@InputCssClass"
                data-input-mode="@ColorMode.ToCSS()"
                data-input-style="@InputCssStyle"
                data-input-tab-index="@TabIndex"
                data-popover-container
                data-show-swatch="@(!IconButton)"
                disabled="@Disabled"
                inline="@(DisplayType == PickerDisplayType.Inline)"
                name="@NameValue"
                readonly="@ReadOnly"
                required="@Required"
                style="@CssStyle"
                tabindex="-1"
                value="@CurrentValueAsString"
                @valuechange="OnValueChange">
    @if (DisplayType != PickerDisplayType.Button && !string.IsNullOrEmpty(Label))
    {
        <label for="@Id">@Label</label>
    }
    @if (!string.IsNullOrEmpty(HelpText)
        || IsInvalidAndTouched)
    {
        <div class="field-helpers">
            @if (IsInvalidAndTouched)
            {
                <ul class="mr-auto mb-0 pl-0">
                    @foreach (var message in GetValidationMessages())
                    {
                        <li>@message</li>
                    }
                </ul>
            }
            else if (!string.IsNullOrEmpty(HelpText))
            {
                <div class="mr-auto">@HelpText</div>
            }
        </div>
    }
    @ChildContent
</tf-color-input>
