@namespace Tavenem.Blazor.Framework

@typeparam TValue

@inherits PickerComponentBase<TValue>

<tf-datetime-input @ref="ElementReference"
                   @attributes="AdditionalAttributes"
                   id="@ContainerId"
                   autofocus="@AutoFocus"
                   button="@(DisplayType == PickerDisplayType.Button)"
                   class="@CssClass"
                   data-am="@AMString"
                   data-calendar="@Calendar"
                   data-hour12="@IsTwelveHour"
                   data-input-id="@Id"
                   data-input-class="@InputCssClass"
                   data-input-style="@InputCssStyle"
                   data-locale="@Culture.Name"
                   data-pm="@PMString"
                   data-popover-container
                   data-show-calendar="@IsCalendarShown"
                   data-show-time-zone="@IsTimeZoneShown"
                   data-time-separator="@TimeSeparator"
                   data-time-zone="@TimeZoneIanaId"
                   date="@HasDate"
                   disabled="@Disabled"
                   inline="@(DisplayType == PickerDisplayType.Inline)"
                   max="@MaxString"
                   min="@MinString"
                   name="@NameValue"
                   placeholder="@Placeholder"
                   readonly="@ReadOnly"
                   required="@Required"
                   seconds="@IsSecondsShown"
                   style="@CssStyle"
                   time="@HasTime"
                   type="@ResolvedDateType.ToCSS()"
                   tabindex="@TabIndex"
                   value="@CurrentValueAsString"
                   @valuechange="OnValueChange">
    @if (DisplayType != PickerDisplayType.Button)
    {
        if (!string.IsNullOrEmpty(Label))
        {
            <label for="@Id">@Label</label>
        }
        @if (!string.IsNullOrEmpty(HelpText)
            || IsInvalidAndTouched)
        {
            <div class="field-helpers">
                @if (IsInvalidAndTouched)
                {
                    <ul class="mr-auto mb-0 pl-0">
                        @foreach (var message in GetValidationMessages())
                        {
                            <li>@message</li>
                        }
                    </ul>
                }
                else if (!string.IsNullOrEmpty(HelpText))
                {
                    <div class="mr-auto">@HelpText</div>
                }
            </div>
        }
    }
    @ChildContent
</tf-datetime-input>
