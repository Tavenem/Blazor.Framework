let e;function t(e){const t=document.getElementById(e);if(!t)return;const i=t.getElementsByClassName("header");i&&i.length&&i[0]instanceof HTMLElement&&(i[0].addEventListener("pointerdown",r),document.addEventListener("pointerup",a),document.addEventListener("pointermove",n))}function n(t){if(!e||null==e.dragStartX||null==e.dragStartY)return;if(t.preventDefault(),!e.dragInertiaOvercome){if(!(Math.abs(t.clientX-e.dragStartX)>10||Math.abs(t.clientY-e.dragStartY)>10))return;e.dragInertiaOvercome=!0}const n=(e.offsetParent?.clientWidth||window.innerWidth)/2,r=e.clientWidth/2,a=(e.offsetParent?.clientHeight||window.innerHeight)/2,i=e.clientHeight/2,l=Math.min(Math.max(-n+r,(e.dragFinalX||0)+(t.clientX-e.dragStartX)),n-r),o=Math.min(Math.max(-a+i,(e.dragFinalY||0)+(t.clientY-e.dragStartY)),a-i);e.dragCurrentX=l,e.dragCurrentY=o,e.style.left=l+"px",e.style.top=o+"px"}function r(t){!(t.target instanceof Element)||t.target instanceof HTMLAnchorElement||t.target instanceof HTMLButtonElement||t.target instanceof HTMLInputElement||t.target instanceof HTMLSelectElement||t.target instanceof HTMLTextAreaElement||(t.target.hasPointerCapture(t.pointerId)&&t.target.releasePointerCapture(t.pointerId),t.currentTarget instanceof HTMLElement&&t.currentTarget.parentElement instanceof HTMLElement&&t.currentTarget.parentElement.parentElement instanceof HTMLDialogElement&&(t.preventDefault(),e=t.currentTarget.parentElement.parentElement,e.dragStartX=t.clientX,e.dragStartY=t.clientY))}function a(){e&&(e.dragFinalX=e.dragCurrentX,e.dragFinalY=e.dragCurrentY,delete e.dragStartX,delete e.dragStartY,delete e.dragCurrentX,delete e.dragCurrentY,e=void 0)}!function(){const e={};try{if(process)return process.env=Object.assign({},process.env),void Object.assign(process.env,e)}catch(e){}globalThis.process={env:e}}();export{t as initialize};
//# sourceMappingURL=tavenem-dialog.js.map
