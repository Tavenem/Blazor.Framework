let e;!function(){const e={};try{if(process)return process.env=Object.assign({},process.env),void Object.assign(process.env,e)}catch(e){}globalThis.process={env:e}}();class t extends HTMLElement{constructor(){super(),this._replacing=!1,this._mutationObserver=new MutationObserver((e=>{if(this._replacing)return;let t=!1;for(const n of e)if("childList"===n.type||"characterData"===n.type){t=!0;break}t&&this.refreshEmoji()}))}connectedCallback(){const e=this.attachShadow({mode:"open"}),t=document.createElement("style");t.textContent='span {\n    font-family: "Noto Color Emoji",\n                 system-ui,\n                 "Apple Color Emoji",\n                 "Segoe UI Emoji",\n                 "Segoe UI Symbol",\n                 "EmojiOne Color",\n                 "Android Emoji",\n                 sans-serif;\n    font-style: normal;\n    font-weight: 400;\n}\n\nslot {\n    display: none;\n}\n',e.appendChild(t);const n=document.createElement("slot");e.appendChild(n);const o=document.createElement("span");e.appendChild(o),this.refreshEmoji(),this._mutationObserver.observe(this,{characterData:!0,childList:!0,subtree:!0})}refreshEmoji(){this._replacing||(e?e&&e.length&&this.refreshEmojiInner():fetch("_content/Tavenem.Blazor.Framework/emoji.json").then((e=>e.json())).then((t=>{e=t,this.refreshEmojiInner()})))}refreshEmojiInner(){if(this._replacing||!e||!e.length)return;const t=this.shadowRoot;if(!t)return;const n=t.querySelector("span");if(!n)return;if(!this.textContent||!this.textContent.length)return this._replacing=!0,n.textContent=null,this._replacing=!1,void console.log("!this.textContent");const o=function(e,t){let n=0,o=e.length;for(;n<o&&e[n]===t;)++n;for(;o>n&&e[o-1]===t;)--o;return n>0||o<e.length?e.substring(n,o):e}(this.textContent.trim(),":").trim().toLowerCase();if(!o||!o.length)return this._replacing=!0,n.textContent=null,this._replacing=!1,void console.log("!text");const s=e.find((e=>e.shortName===o||e.shortNames?.includes(o)));if(!s)return console.log("!emoji"),this._replacing=!0,n.textContent=this.textContent,void(this._replacing=!1);let i=`&#x${s.codepoint};`;if(s.codepoints&&s.codepoints.length)for(let e=0;e<s.codepoints.length;e++)i+=`&#x${s.codepoints[e]};`;this._replacing=!0,n.innerHTML=i,this._replacing=!1}}export{t as TavenemEmojiHTMLElement};
//# sourceMappingURL=tavenem-emoji.js.map
