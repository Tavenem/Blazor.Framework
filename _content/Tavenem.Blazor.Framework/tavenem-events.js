!function(){const e={};try{if(process)return process.env=Object.assign({},process.env),void Object.assign(process.env,e)}catch(e){}globalThis.process={env:e}}();const e={};function n(n,t,o,r,s,i,f){const l=c.bind(null,s),d=document.getElementById(t);d&&(d.addEventListener(n,l,!1),e[s]={correctOffset:o,delay:r,elementId:t,eventName:n,handler:l,properties:i,reference:f})}function t(n){const t=e[n];if(!(t&&t.elementId&&t.eventName&&t.handler))return;delete t.reference;const o=document.getElementById(t.elementId);o&&o.removeEventListener(t.eventName,t.handler,!1),delete e[n]}function o(n){const t=e[n];t&&t.debounce&&delete t.debounce}function c(n,t){const c=e[n];if(!c||c.debounce||!c.elementId||!c.reference||!c.properties)return;if(document.getElementById(c.elementId)!=t.srcElement)return;c.debounce=!0;const r={};for(var s=0;s<c.properties.length;s++)r[c.properties[s]]=t[c.properties[s]];c.correctOffset&&function(e,n){const t=n.target;if(t instanceof Element)if(n instanceof MouseEvent){const o=t.getBoundingClientRect();e.offsetX=n.clientX-o.x,e.offsetY=n.clientY-o.y}else if(n instanceof TouchEvent&&n.targetTouches.length>0){const o=n.targetTouches[1],c=t.getBoundingClientRect();e.offsetX=o.clientX-c.x,e.offsetY=o.clientY-c.y}}(r,t),c.reference.invokeMethodAsync("OnEventOccur",n,JSON.stringify(r)),window.setTimeout(o.bind(null,n),c.delay)}export{n as subscribe,t as unsubscribe};
//# sourceMappingURL=tavenem-events.js.map
