@page "/components/contents"

<PageTitle>Contents - Tavenem Blazor Framework</PageTitle>

<Heading Level="HeadingLevel.H1">Contents</Heading>

<p>
    The contents component displays a list of headings on the current page, with
    links to each of them.
</p>

<Heading Level="HeadingLevel.H2">Basics</Heading>

<p>
    Use the <code>Contents</code> component to create a table of contents for the current page. The
    list is built automatically by examining the current page for <a
    href="./components/heading">Heading</a> components. The list is rebuilt on page navigation, and
    responds to dynamic adding and removing of <code>Heading</code> components.
</p>

<p>
    You can make a <code>Contents</code> component responsive by setting the
    <code>Breakpoint</code> parameter to the breakpoint at which the list should
    be visible. When set to <code>None</code> (the default) the list is visible
    at all breakpoints.
</p>

<p>
    The <code>ThemeColor</code> parameter can be set to control the color theme
    of the list.
</p>

<Heading Level="HeadingLevel.H2">Layout</Heading>

<p>
    The <code>FrameworkLayout</code> component has a built-in
    <code>Contents</code> component. It is positioned after the main content
    (typically on the right-hand side of a page), and will automatically share
    the <code>ThemeColor</code> of the parent <code>FrameworkLayout</code>.
</p>

<p>
    The <code>Breakpoint</code> parameter of the built-in <code>Contents</code>
    component can be set with the <code>ContentsBreakpoint</code> parameter of
    <code>FrameworkLayout</code> (it defaults to <code>Lg</code>). There is one
    key difference, however: when set to <code>None</code> the table of contents
    is hidden completely, rather than displayed at all breakpoints. This allows
    you to suppress the built-in list (possibly in order to use it differently
    in your own layout).
</p>

<Heading Level="HeadingLevel.H2">Manual Headings</Heading>

<p>
    It is also possible to add headings to the table(s) of contents on a page manually. The
    <code>FrameworkLayout</code> provides itself as a <a
    href="https://learn.microsoft.com/en-us/aspnet/core/blazor/components/cascading-values-and-parameters">cascading
    value</a>, and has two key methods for this purpose: <code>AddHeading</code> and
    <code>RemoveHeading</code>, both of which take a <code>HeadingInfo</code> object that describes
    a heading.
</p>

<p>
    Adding a heading will automatically add it to any displayed table of <code>Contents</code>
    component. It is important that you also remove the heading when it is no longer relevant. For
    instance, in the <code>Dispose</code> method of a component which adds it.
</p>

<p>
    This manual method of adding and removing headings can be used when your contents cannot be
    directly controlled with <a href="./components/heading">Heading</a> components. For example,
    when you need to build a table of contents dynamically.
</p>

<p>
    You can try this yourself by clicking the following buttons, which will add or remove the
    heading below to this page's table of contents:
</p>

<h3>Dynamic Heading</h3>
<div class="d-flex gap-3">
    <button class="btn primary" @onclick="AddHeading" disabled="@_added">Add Heading to Contents</button>
    <button class="btn danger" @onclick="RemoveHeading" disabled="@(!_added)">Remove Heading from Contents</button>
</div>
