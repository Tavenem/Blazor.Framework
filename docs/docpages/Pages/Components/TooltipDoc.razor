@page "/components/tooltip"

<PageTitle>Tooltip - Tavenem Blazor Framework</PageTitle>

<Heading Level="HeadingLevel.H1">Tooltip</Heading>

<p>
    The Tavenem Blazor Framework includes an easy to use Tooltip component.
</p>

<Heading Level="HeadingLevel.H2">Basics</Heading>

<p>
    Wrap any content with a <code>Tooltip</code> component and set the <code>TooltipText</code>
    property to the tooltip to create a simple tooltip.
</p>

<Collapse IsOpen="true" Class="align-self-stretch outlined mb-3" BodyClass="codeblock pre-razor-code">
    <TitleContent>
        <div class="row align-items-center justify-content-center">
            <Tooltip TooltipText="Delete">
                <button class="btn btn-icon"><tf-icon>delete</tf-icon></button>
            </Tooltip>
        </div>
    </TitleContent>
    <ChildContent>
        @CodeFormatter.CodeToMarkup(@"<Tooltip TooltipText=""Delete"">
    <button class=""btn btn-icon""><tf-icon>delete</tf-icon></button>
</Tooltip>")
    </ChildContent>
</Collapse>

<p>
    You can provide HTML content as a <code>MarkupString</code> with the <code>TooltipMarkup</code>
    instead.
</p>

<Collapse IsOpen="true" Class="align-self-stretch outlined mb-3" BodyClass="codeblock pre-razor-code">
    <TitleContent>
        <div class="row align-items-center justify-content-center">
            <Tooltip TooltipMarkup="@((MarkupString)"A <strong><em>strong</em></strong> tooltip")">
                <button class="btn btn-icon"><tf-icon>event</tf-icon></button>
            </Tooltip>
        </div>
    </TitleContent>
    <ChildContent>
        @CodeFormatter.CodeToMarkup(@"<Tooltip TooltipMarkup=""@((MarkupString)""A <strong><em>strong</em></strong> tooltip"")"">
    <button class=""btn btn-icon""><tf-icon>event</tf-icon></button>
</Tooltip>")
    </ChildContent>
</Collapse>

<p>
    For full control, use the <code>TooltipContent RenderFragment</code>.
</p>

<Collapse IsOpen="true" Class="align-self-stretch outlined mb-3" BodyClass="codeblock pre-razor-code">
    <TitleContent>
        <div class="row align-items-center justify-content-center">
            <Tooltip>
                <ChildContent>
                    <button class="btn btn-icon"><tf-icon>help</tf-icon></button>
                </ChildContent>
                <TooltipContent>
                    <h6>Tooltip title</h6>
                    <p>Tooltip content</p>
                    <p><tf-icon class="success">thumb_up</tf-icon></p>
                </TooltipContent>
            </Tooltip>
        </div>
    </TitleContent>
    <ChildContent>
        @CodeFormatter.CodeToMarkup(@"<Tooltip>
    <ChildContent>
        <button class=""btn btn-icon""><tf-icon>help</tf-icon></button>
    </ChildContent>
    <TooltipContent>
        <h6>Tooltip title</h6>
        <p>Tooltip content</p>
        <p><tf-icon class=""success"">thumb_up</tf-icon></p>
    </TooltipContent>
</Tooltip>")
    </ChildContent>
</Collapse>

<p>
    Tooltips normally appear when the element either receives focus, or when the mouse pointer
    enters the element, and disappear whent he element loses focus, or is tapped with the pointer.
    On devices where hovering is not supported by the default input method, a small help icon will
    appear near the element. The tooltip will appear when this icon is tapped. You can hide the icon
    by adding the <code>no-help</code> class to the tooltip, if you intend to provide alternate
    means to present the tooltip's information to touch device users.
</p>

<p>
    Tooltips' visibility can also be toggled programmatically with the <code>Toggle</code> method.
</p>

<Heading Level="HeadingLevel.H2">Customization</Heading>

<p>
    Set the color to any theme color with the <code>ThemeColor</code> property.
</p>

<p>
    Remove the arrow by setting the <code>Arrow</code> property to <code>false</code>.
</p>

<p>
    Change the side of the anchor element where the tooltip appears by setting the <code>Side</code>
    property.
</p>

<p>
    Control the delay before the tooltip appears with the <code>Delay</code> property.
</p>

<p>
    Cause the tooltip to be dismissed when tapped with the pointer by setting the
    <code>DismissOnTap</code> property to <code>true</code>.
</p>

<Collapse IsOpen="true" Class="align-self-stretch outlined mb-3" BodyClass="codeblock pre-razor-code">
    <TitleContent>
        <div class="row align-items-center justify-content-center">
            <Tooltip TooltipText="Add" ThemeColor="ThemeColor.Secondary" Side="Side.Right" Arrow="false" Delay="600">
                <button class="btn btn-icon success"><tf-icon>add</tf-icon></button>
            </Tooltip>
        </div>
    </TitleContent>
    <ChildContent>
        @CodeFormatter.CodeToMarkup(@"<Tooltip TooltipText=""Add"" ThemeColor=""ThemeColor.Secondary"" Side=""Side.Right"" Arrow=""false"" Delay=""600"">
    <button class=""btn btn-icon success""><tf-icon>add</tf-icon></button>
</Tooltip>")
    </ChildContent>
</Collapse>