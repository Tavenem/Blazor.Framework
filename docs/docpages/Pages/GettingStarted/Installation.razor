@page "/getting-started/installation"

<PageTitle>Installation - Tavenem Blazor Framework</PageTitle>

<h1>Installation</h1>

<p>This page will show you how to install and get started using the Tavenem Blazor Framework.</p>

<h2 data-heading-title="Install">1. Install</h2>
<p>The <code>Tavenem.Blazor.Framework</code> NuGet package is available through the package manager, or the CLI:</p>
<pre class="codeblock pre-razor-code">
    <pre class="user-select-all">dotnet add package Tavenem.Blazor.Framework</pre>
</pre>

<h2 data-heading-title="Import namespace">2. Import namespace</h2>
<p>Add the package namespace to your <code>_Imports.razor</code> file.</p>
<pre class="codeblock pre-razor-code">
    <pre class="user-select-all">
        <span class="pre-directive">&#64;using</span><span> Tavenem</span><span class="pre-operator">.</span><span>Blazor</span><span class="pre-operator">.</span><span>Framework</span>
    </pre>
</pre>

<h2 data-heading-title="Add font links">3. Add font links</h2>
<p>Add the following links to your HTML head in either <code>index.html</code> (WebAssembly standalone) or <code>App.razor</code> (Web app).</p>
<pre class="codeblock pre-razor-code">
    @CodeFormatter.CodeToMarkup(@"<link href=""https://fonts.googleapis.com/css2?family=Encode+Sans+SC:wdth,wght@75,100..900&family=Recursive:slnt,wght,CASL,MONO@-15..0,300..1000,0..1,0..1&display=swap"" rel=""stylesheet"">
 <link href=""https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0..1,-25..0"" rel=""stylesheet"" />", true)
</pre>
<p>
    You may use different fonts if you prefer, but a <a
    href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide">variable
    font</a> is strongly recommended in order to work with the framework's styles most effectively.
    The body font you select should support weights from 300–900, and an italic style. The title
    font you select should support weights from 500–700.
</p>
<p>
    One of the strengths of the <a href="https://www.recursive.design/">Recursive</a> font
    is that it supports both a variable-width and monospace variant in the same font,
    using a variable axis. If you select a different body font, you will also need to choose
    a monospace font and override the <span class="pre-attribute">--tavenem-font-family-monospace</span>
    property on <span class="pre-method">:root</span>.
</p>
<p>
    If you prefer to use a different icon library, instead of <a
    href="https://fonts.google.com/icons?icon.set=Material+Symbols">Google's Material Symbols</a>,
    replace the link above with the appropriate process.
</p>
<p>
    See the <a href="./components/icon">Icon</a> component documentation for details.
</p>

<h2 data-heading-title="Remove template CSS">4. Remove template CSS</h2>
<p>
    If you started your project with the default Blazor template, delete the
    references to Bootstrap, and all the pregenerated content in the
    <code>app.css</code> file (you can delete this file completely if you don't
    plan to put your own content there).
</p>
<p>
    Don't worry about the built-in Blazor styles in the template stylesheet. The
    Tavenem Blazor Framework reproduces and modifies them.
</p>
<p>
    If you ordinarily use <a href="https://getbootstrap.com/">Bootstrap</a>, be aware that the
    Tavenem Blazor Framework includes most of the same (or similar) utility classes, and most of the
    same (or similar) components. Consider carefully before keeping references to Bootstrap's CSS in
    your project, as there are likely to be conflicts leading to difficult styling issues.
</p>

<h2 data-heading-title="Register services with dependency injection">5. Register services with dependency injection</h2>
<p>Add the following to your <code>Program.cs</code>:</p>
<pre class="codeblock pre-razor-code">
    <pre class="user-select-all">
        <span class="pre-attribute">builder</span><span class="pre-operator">.</span><span>Services</span><span class="pre-operator">.</span><span class="pre-method">AddTavenemFramework</span><span>();</span>
    </pre>
</pre>

<p>
    This should be done in the <code>Program.cs</code> of both the client project and the server
    project (for prerendering support) in Web Apps.
</p>

<h2 data-heading-title="Set up the Framework">6. Set up the Framework (optional, but strongly recommended)</h2>
<p>Add a <code class="primary">FrameworkLayout</code> component to your <code>MainLayout.razor</code> file.</p>
<p>See <a href="./layout/layout">Layout</a> for details.</p>
